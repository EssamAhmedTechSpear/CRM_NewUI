import { BillingDataDTO } from "./BillingDataDTO";
import { OrderRegistrationDTO } from "./OrderRegistrationDTO";

export class BankTransactionDTO {
  id: number;
  pending: boolean;
  amount_cents: number;
  success: boolean;
  is_auth: boolean;
  is_capture: boolean;
  is_standalone_payment: boolean;
  is_voided: boolean;
  is_refunded: boolean;
  is_3d_secure: boolean;
  integration_id: number;
  terminal_id: any;
  has_parent_transaction: boolean;
  order: OrderRegistrationDTO = new OrderRegistrationDTO();
  created_at: string;
  paid_at: string;
  currency: string;
  source_data: any;
  api_source: string;
  fees: string;
  vat: string;
  converted_gross_amount: string;
  data: any;
  is_cashout: boolean;
  wallet_transaction_type: any;
  is_upg: boolean;
  is_internal_refund: boolean;
  billing_data: BillingDataDTO = new BillingDataDTO();
  installment: any;
  integration_type: string;
  card_type: string;
  routing_bank: string;
  card_holder_bank: string;
  merchant_commission: number;
  extra_detail: any;
  discount_details: any[];
  pre_conversion_currency: any;
  pre_conversion_amount_cents: any;
  is_host2host: boolean;
  installment_info: any;
  vf_loyalty_details: any;
  purchase_fees: number;
  original_amount: number;
  is_trx_bank_installment: boolean;
  payment_source: string;
  is_void: boolean;
  is_refund: boolean;
  is_hidden: boolean;
  error_occured: boolean;
  is_live: boolean;
  other_endpoint_reference: any;
  refunded_amount_cents: number;
  source_id: number;
  is_captured: boolean;
  captured_amount: number;
  merchant_staff_tag: any;
  updated_at: string;
  is_settled: boolean;
  bill_balanced: boolean;
  is_bill: boolean;
  owner: number;
  parent_transaction: any;
  token: string;
}
